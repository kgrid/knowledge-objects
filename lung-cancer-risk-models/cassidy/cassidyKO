{
    "metadata": {
        "title": "Cassidy, LLP risk model: an individual 5-year risk prediction model for lung cancer",
        "description": "Estimates the lung cancer 5-year risk for an individual, given the age, gender, and risk factors. This models takes the midpoint of the age when calculating risk, making this calculator different than others. This model was created within a collection of lung cancer models including Spitz Model, Tammemagi Model, Park Model, Marcus Model, Hoggart Model, Etzel Model, and Bach Model.",
        "citations": [
            {
                "title": null,
                "at": null
            }
        ]
    },
    "inputMessage": "<rdf:RDF xmlns:ot=\"http://uofm.org/objectteller/#\"\n         xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n    <rdf:Description rdf:about=\"http://uofm.org/objectteller/inputMessage\">\n        <ot:noofparams>3</ot:noofparams>\n        <ot:params>\n            <rdf:Seq>\n                <rdf:li>sex</rdf:li>\n                <rdf:li>age</rdf:li>\n                <rdf:li>riskFactors</rdf:li>\n            </rdf:Seq>\n        </ot:params>\n    </rdf:Description>\n    <rdf:Description rdf:about=\"http://uofm.org/objectteller/sex/\">\n        <ot:datatype>STRING</ot:datatype>\n    </rdf:Description>\n    <rdf:Description rdf:about=\"http://uofm.org/objectteller/age/\">\n        <ot:datatype>INT</ot:datatype>\n    </rdf:Description>\n    <rdf:Description rdf:about=\"http://uofm.org/objectteller/riskFactors/\">\n        <ot:datatype>MAP</ot:datatype>\n    </rdf:Description>\n</rdf:RDF>\n",
    "outputMessage": "<rdf:RDF xmlns:ot=\"http://uofm.org/objectteller/\"\n  xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n  <rdf:Description rdf:about=\"http://uofm.org/objectteller/outputMessage\">\n    <ot:returntype>MAP</ot:returntype>\n  </rdf:Description>\n</rdf:RDF>\n",
    "payload": {
        "content": "# Cassidy, The LLP risk model: an individual risk prediction model for lung cancer\n# Created by: Kristen McGarry, KGrid\n# Last Updated: May 4th, 2017\n\nfrom math import exp\ndef getAlpha(sex,age):\n    sex = sex.lower()\n    if sex == \"male\":\n        alpha_ref = {\"40-44\":-9.06,\"45-49\":-8.16,\"50-54\":-7.31,\"55-59\":-6.63,\"60-64\":-5.97,\"65-69\":-5.56,\"70-74\":-5.31,\"75-79\":-4.83,\"80-84\":-4.68}\n    elif sex == \"female\":\n        alpha_ref = {\"40-44\":-9.90,\"45-49\":-8.06,\"50-54\":-7.46,\"55-59\":-6.50,\"60-64\":-6.22,\"65-69\":-5.99,\"70-74\":-5.49, \"75-79\":-5.23,\"80-84\":-5.42}\n    else:\n        return \"invalid sex\"\n\n    # take midpoint of every age\n    age = age + 0.5\n\n    if ((age >= 40) & (age < 45)):\n        alpha_1 = alpha_ref[\"40-44\"]\n        multi_1 = 45-age\n    elif ((age >= 45) & (age < 50)):\n        alpha_1 = alpha_ref[\"45-49\"]\n        multi_1 = 50-age\n    elif ((age >= 50) & (age < 55)):\n        alpha_1 = alpha_ref[\"50-54\"]\n        multi_1 = 55-age\n    elif ((age >= 55) & (age < 60)):\n        alpha_1 = alpha_ref[\"55-59\"]\n        multi_1 = 60-age\n    elif ((age >= 60) & (age < 65)):\n        alpha_1 = alpha_ref[\"60-64\"]\n        multi_1 = 65-age\n    elif ((age >= 65) & (age < 70)):\n        alpha_1 = alpha_ref[\"65-69\"]\n        multi_1 = 70-age\n    elif ((age >= 70) & (age < 75)):\n        alpha_1 = alpha_ref[\"70-74\"]\n        multi_1 = 75-age\n    elif ((age >= 75) & (age < 80)):\n        alpha_1 = alpha_ref[\"75-79\"]\n        multi_1 = 80-age\n    elif ((age >= 80) & (age < 85)):\n        alpha_1 = alpha_ref[\"80-84\"]\n        multi_1 = 85-age\n    else:\n        return \"invalid age or age outside of 40-84 range\"\n\n\n\n    multi_2 = 5-multi_1\n    age = age + multi_1\n    if ((age >= 40) & (age < 45)):\n        alpha_2 = alpha_ref[\"40-44\"]\n    elif ((age >= 45) & (age < 50)):\n        alpha_2 = alpha_ref[\"45-49\"]\n    elif ((age >= 50) & (age < 55)):\n        alpha_2 = alpha_ref[\"50-54\"]\n    elif ((age >= 55) & (age < 60)):\n        alpha_2 = alpha_ref[\"55-59\"]\n    elif ((age >= 60) & (age < 65)):\n        alpha_2 = alpha_ref[\"60-64\"]\n    elif ((age >= 65) & (age < 70)):\n        alpha_2 = alpha_ref[\"65-69\"]\n    elif ((age >= 70) & (age < 75)):\n        alpha_2 = alpha_ref[\"70-74\"]\n    elif ((age >= 75) & (age < 80)):\n        alpha_2 = alpha_ref[\"75-79\"]\n    elif ((age >= 80) & (age < 85)):\n        alpha_2 = alpha_ref[\"80-84\"]\n    else:\n        return \"invalid age or age outside of 40-84 range\"\n\n    alpha = (multi_1*(alpha_1/5)) + (multi_2*(alpha_2/5))\n    return alpha\n\n# Beta = sum(Bi * xi), if risk factor is listed, x = 1\ndef getBeta(listOfRiskFactors):\n    total = 0\n    # Model Coefficients, Table 2\n    logOddsRatio = {\"pneum\":0.602,\"asbestos\":0.634,\"cancHx\":0.675,\"famHxCanc, early onset\":0.703,\"famHxCanc, late onset\":0.168,\"smoking duration, 1-20 years\":0.769,\"smoking duration, 21-40 years\":1.452,\"smoking duration, 41-60 years\":2.507,\"smoking duration, >= 60 years\":2.724}\n    for riskFactor in listOfRiskFactors:\n        if riskFactor not in logOddsRatio.keys():\n            return \"invalid risk factor\"\n        value = logOddsRatio[riskFactor]\n        total += value\n    return total\n\n\ndef execute(inputs):\n    sex = inputs[\"sex\"]\n    age = inputs[\"age\"]\n    listOfRiskFactors = inputs[\"riskFactors\"]\n\n    alpha = getAlpha(sex,age)\n    if type(alpha) != float:\n        return alpha\n    beta = getBeta(listOfRiskFactors)\n    if type(beta) != float:\n        return beta\n\n    prob = 1/(1+exp(-(alpha+beta)))\n    prob = (prob *100)\n    prob = round(prob,2)\n    interpretation = \"This individual has a \" + str(prob) + \"% probability of developing lung cancer in the next 5 years.\"\n    return {\"result\":prob,\"interpretation\":interpretation}\n\n\n\ndef test():\n    if str(getAlpha(\"male\",68)) != \"-5.385\":\n        return \"error.\"\n    if str(getAlpha(\"female\",74)) != \"-5.256\":\n        return \"error.\"\n    if str(getAlpha(\"female\",64)) != \"-6.013\":\n        return \"error.\"\n    if str(getAlpha(\"male\",51)) != \"-7.106\":\n        return \"error.\"\n    if str(getBeta({\"smoking duration, 21-40 years\":1})) != \"1.452\":\n        return \"error.\"\n    if execute({\"sex\":\"male\",\"age\":77,\"riskFactors\":[\"famHxCanc, early onset\",\"asbestos\"]}) != {'interpretation': 'This individual has a 3.17% probability of developing lung cancer in the next 5 years.', 'result': 3.17}:\n        return \"error.\"\n    if execute({\"sex\":\"male\",\"age\":51,\"riskFactors\":[\"smoking duration, 21-40 years\"]}) != {'interpretation': 'This individual has a 0.35% probability of developing lung cancer in the next 5 years.', 'result': 0.35}:\n        return \"error.\"\n    if execute({\"sex\":\"female\",\"age\":65,\"riskFactors\":[\"smoking duration, 21-40 years\",\"famHxCanc, late onset\",\"pneum\"]}) != {'interpretation': 'This individual has a 2.37% probability of developing lung cancer in the next 5 years.', 'result': 2.37}:\n        return \"error.\"\n    if execute({\"sex\":\"female\",\"age\":68,\"riskFactors\":[\"smoking duration, 21-40 years\"]})!= {'interpretation': 'This individual has a 1.49% probability of developing lung cancer in the next 5 years.', 'result': 1.49}:\n        return  \"error.\"\n    if execute({\"sex\":\"male\",\"age\":66,\"riskFactors\":[\"smoking duration, 41-60 years\",\"asbestos\"]}) != {'interpretation': 'This individual has a 8.75% probability of developing lung cancer in the next 5 years.', 'result': 8.75}:\n        return \"error.\"\n    if execute({\"sex\":\"male\",\"age\":90,\"riskFactors\":[]}) != \"invalid age or age outside of 40-84 range\":\n        return \"error.\"\n    if execute({\"sex\":\"child\",\"age\":10,\"riskFactors\":[]}) != \"invalid sex\":\n        return \"error.\"\n    if execute({\"sex\":\"FEMALE\",\"age\":47,\"riskFactors\":[\"diabetic\"]}) != \"invalid risk factor\":\n        return \"error.\"\n    return \"ok.\"\n",
        "engineType": "Python",
        "functionName": "execute"
    },
    "url": "https://dlhs-fedora-dev.med.umich.edu/ObjectTeller/knowledgeObject/ark:/99999/fk4571pp25",
    "source": "user-generated"
}
